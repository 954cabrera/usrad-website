---
const { chatbotLabel = "ðŸ’¬ Chat" } = Astro.props;
---

<div class="chatbot-container">
  <!-- Chatbot Toggle -->
  <button
    class="chatbot-toggle"
    aria-label="Open Chat"
    id="chat-toggle-btn"
  >
    {chatbotLabel}
  </button>

  <!-- Chatbot Window -->
  <div id="chatbot-window" class="chatbot-window hidden">
    <div class="chatbot-header">
      AI Assistant <button id="close-chat-btn">âœ–</button>
    </div>
    <div id="chat-log" class="chat-log"></div>
    <form id="chat-form" class="chat-form">
      <input
        type="text"
        id="chat-input"
        placeholder="Ask a question..."
        autocomplete="off"
        required
      />
      <button type="submit">Send</button>
    </form>
  </div>
</div>

<style>
  .chatbot-container {
    position: fixed;
    z-index: 9999;
    pointer-events: none;
    bottom: 0;
    right: 0;
    width: auto;
    height: auto;
  }
  
  .chatbot-toggle {
    position: fixed;
    bottom: 1.5rem;
    right: 1.5rem;
    background-color: #e6c378;
    color: #003087;
    border: none;
    padding: 0.75rem 1.25rem;
    border-radius: 9999px;
    font-weight: 600;
    font-variant: small-caps;
    font-size: 0.875rem;
    cursor: pointer;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    z-index: 9999;
    transition: all 0.3s ease;
    pointer-events: auto;
  }

  .chatbot-toggle:hover {
    background-color: #f1d8a1;
    transform: translateY(-3px) scale(1.05);
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.2);
  }

  .chatbot-window {
    transition:
      transform 0.3s ease,
      opacity 0.3s ease;
    transform: translateY(20px);
    opacity: 0;
    pointer-events: none;
    position: fixed;
    bottom: 5rem;
    right: 1.5rem;
    width: 320px;
    max-height: 420px;
    background: #ffffff;
    border: 1px solid #e2e8f0;
    border-radius: 1rem;
    display: flex;
    flex-direction: column;
    box-shadow: 0 12px 30px rgba(0, 0, 0, 0.2);
    overflow: hidden;
    z-index: 10000;
  }

  .chatbot-window.visible {
    transform: translateY(0);
    opacity: 1;
    pointer-events: auto;
  }

  .chatbot-header {
    background: #003087;
    color: #ffffff;
    padding: 0.75rem 1rem;
    font-variant: small-caps;
    font-weight: 600;
    font-size: 0.875rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .chatbot-header button {
    background: none;
    border: none;
    color: #e6c378;
    font-size: 1.125rem;
    cursor: pointer;
    transition: color 0.3s ease;
  }

  .chatbot-header button:hover {
    color: #f1d8a1;
  }

  .chat-log {
    flex: 1;
    padding: 1rem;
    overflow-y: auto;
    font-size: 0.875rem;
    color: #0f172a;
    background: #f9fafb;
  }

  .chat-form {
    display: flex;
    border-top: 1px solid #e2e8f0;
    background: #ffffff;
  }

  .chat-form input {
    flex: 1;
    border: none;
    padding: 0.75rem;
    font-size: 0.875rem;
    outline: none;
  }

  .chat-form button {
    background: #003087;
    color: #ffffff;
    border: none;
    padding: 0 1.25rem;
    cursor: pointer;
    font-weight: 600;
    font-size: 0.875rem;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
  }

  .chat-form button::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 0;
    background: rgba(255, 255, 255, 0.1);
    transition: all 0.3s ease;
  }

  .chat-form button:hover {
    background: #00459e;
    transform: scale(1.05);
  }
  
  .chat-form button:hover::before {
    height: 100%;
  }

  /* Chat messages styling */
  .user-message, .bot-message {
    margin-bottom: 0.75rem;
    max-width: 85%;
    padding: 0.5rem 0.75rem;
    border-radius: 0.75rem;
    position: relative;
  }

  .user-message {
    background-color: #e6c378;
    color: #003087;
    margin-left: auto;
    border-bottom-right-radius: 0;
    text-align: right;
  }

  .bot-message {
    background-color: #003087;
    color: #ffffff;
    margin-right: auto;
    border-bottom-left-radius: 0;
  }

  .user-message p, .bot-message p {
    margin: 0;
    font-size: 0.875rem;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const chatToggleBtn = document.getElementById('chat-toggle-btn');
    const closeChatBtn = document.getElementById('close-chat-btn');
    const chatbotWindow = document.getElementById('chatbot-window');
    
    function toggleChatbot() {
      chatbotWindow.classList.toggle('hidden');
      chatbotWindow.classList.toggle('visible');
    }
    
    chatToggleBtn.addEventListener('click', toggleChatbot);
    closeChatBtn.addEventListener('click', toggleChatbot);
    
    // Form submission handling
    const chatForm = document.getElementById('chat-form');
    const chatInput = document.getElementById('chat-input');
    const chatLog = document.getElementById('chat-log');
    
    chatForm.addEventListener('submit', (e) => {
      e.preventDefault();
      const message = chatInput.value.trim();
      if (!message) return;
      
      // Add user message
      const userMessage = document.createElement('div');
      userMessage.className = 'user-message';
      userMessage.textContent = message;
      chatLog.appendChild(userMessage);
      
      // Clear input
      chatInput.value = '';
      
      // Simulate bot response (replace with actual API call in production)
      setTimeout(() => {
        const botMessage = document.createElement('div');
        botMessage.className = 'bot-message';
        botMessage.textContent = "Thank you for your message. Our team will get back to you soon!";
        chatLog.appendChild(botMessage);
        chatLog.scrollTop = chatLog.scrollHeight;
      }, 1000);
    });
  });
</script>